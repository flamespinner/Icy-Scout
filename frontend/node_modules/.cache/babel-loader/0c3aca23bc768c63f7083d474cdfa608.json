{"ast":null,"code":"import * as d3 from \"d3\";\nimport dataTransform from \"../dataTransform\";\nimport componentBubbles from \"./bubbles\";\nimport { dispatch } from \"../events\";\n/**\n * Reusable 3D Multi Series Bubble Chart Component\n *\n * @module\n */\n\nexport default function () {\n  /* Default Properties */\n  let dimensions = {\n    x: 40,\n    y: 40,\n    z: 40\n  };\n  let colors = [\"green\", \"red\", \"yellow\", \"steelblue\", \"orange\"];\n  let classed = \"d3X3dBubblesMultiSeries\";\n  /* Scales */\n\n  let xScale;\n  let yScale;\n  let zScale;\n  let colorScale;\n  let colorDomain = [];\n  let sizeScale;\n  let sizeRange = [0.5, 3.0];\n  /* Components */\n\n  const bubbles = componentBubbles().mappings({\n    x: 'x',\n    y: 'y',\n    z: 'z',\n    size: 'size',\n    color: 'color'\n  }).colors(d3.schemeRdYlGn[8]).sizeRange([2, 2]);\n  /**\n   * Unique Array\n   *\n   * @param {array} array1\n   * @param {array} array2\n   * @returns {array}\n   */\n\n  const arrayUnique = function (array1, array2) {\n    let array = array1.concat(array2);\n    let a = array.concat();\n\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        if (a[i] === a[j]) {\n          a.splice(j--, 1);\n        }\n      }\n    }\n\n    return a;\n  };\n  /**\n  \t /**\n   * Initialise Data and Scales\n   *\n   * @private\n   * @param {Array} data - Chart data.\n   */\n\n\n  const init = function (data) {\n    const {\n      rowKeys,\n      valueExtent,\n      coordinatesExtent\n    } = dataTransform(data).summary();\n    const {\n      x: extentX,\n      y: extentY,\n      z: extentZ\n    } = coordinatesExtent;\n    const {\n      x: dimensionX,\n      y: dimensionY,\n      z: dimensionZ\n    } = dimensions;\n\n    if (typeof xScale === \"undefined\") {\n      xScale = d3.scaleLinear().domain(extentX).range([0, dimensionX]);\n    }\n\n    if (typeof yScale === \"undefined\") {\n      yScale = d3.scaleLinear().domain(extentY).range([0, dimensionY]);\n    }\n\n    if (typeof zScale === \"undefined\") {\n      zScale = d3.scaleLinear().domain(extentZ).range([0, dimensionZ]);\n    }\n\n    if (typeof colorScale === \"undefined\") {\n      colorDomain = arrayUnique(colorDomain, rowKeys);\n      colorScale = d3.scaleOrdinal().domain(colorDomain).range(colors);\n    }\n\n    if (typeof sizeScale === \"undefined\") {\n      sizeScale = d3.scaleLinear().domain(valueExtent).range(sizeRange);\n    }\n  };\n  /**\n   * Constructor\n   *\n   * @constructor\n   * @alias bubblesMultiSeries\n   * @param {d3.selection} selection - The chart holder D3 selection.\n   */\n\n\n  const my = function (selection) {\n    selection.each(function (data) {\n      init(data);\n\n      const bubbleData = function (d) {\n        return d.map(f => {\n          return {\n            key: f.key,\n            values: f.values.map(g => {\n              return {\n                key: g.key,\n                values: [{\n                  key: \"size\",\n                  value: g.value\n                }, {\n                  key: \"color\",\n                  value: g.value\n                }, {\n                  key: \"x\",\n                  value: g.x\n                }, {\n                  key: \"y\",\n                  value: g.y\n                }, {\n                  key: \"z\",\n                  value: g.z\n                }]\n              };\n            })\n          };\n        });\n      };\n\n      const element = d3.select(this).classed(classed, true);\n      bubbles.xScale(xScale).yScale(yScale).zScale(zScale).sizeScale(sizeScale);\n\n      const addBubbles = function (d) {\n        const color = colorScale(d.key);\n        bubbles.color(color);\n        d3.select(this).call(bubbles);\n      };\n\n      const bubbleGroup = element.selectAll(\".bubbleGroup\").data(bubbleData, d => d.key);\n      bubbleGroup.enter().append(\"Group\").classed(\"bubbleGroup\", true).merge(bubbleGroup).transition().each(addBubbles);\n      bubbleGroup.exit().remove();\n    });\n  };\n  /**\n   * Dimensions Getter / Setter\n   *\n   * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\n   * @returns {*}\n   */\n\n\n  my.dimensions = function (_v) {\n    if (!arguments.length) return dimensions;\n    dimensions = _v;\n    return this;\n  };\n  /**\n   * X Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 Scale.\n   * @returns {*}\n   */\n\n\n  my.xScale = function (_v) {\n    if (!arguments.length) return xScale;\n    xScale = _v;\n    return my;\n  };\n  /**\n   * Y Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.yScale = function (_v) {\n    if (!arguments.length) return yScale;\n    yScale = _v;\n    return my;\n  };\n  /**\n   * Z Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 Scale.\n   * @returns {*}\n   */\n\n\n  my.zScale = function (_v) {\n    if (!arguments.length) return zScale;\n    zScale = _v;\n    return my;\n  };\n  /**\n   * Color Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 color scale.\n   * @returns {*}\n   */\n\n\n  my.colorScale = function (_v) {\n    if (!arguments.length) return colorScale;\n    colorScale = _v;\n    return my;\n  };\n  /**\n   * Size Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 size scale.\n   * @returns {*}\n   */\n\n\n  my.sizeScale = function (_v) {\n    if (!arguments.length) return sizeScale;\n    sizeScale = _v;\n    return my;\n  };\n  /**\n   * Size Range Getter / Setter\n   *\n   * @param {number[]} _v - Size min and max (e.g. [0.5, 3.0]).\n   * @returns {*}\n   */\n\n\n  my.sizeRange = function (_v) {\n    if (!arguments.length) return sizeRange;\n    sizeRange = _v;\n    return my;\n  };\n  /**\n   * Colors Getter / Setter\n   *\n   * @param {Array} _v - Array of colours used by color scale.\n   * @returns {*}\n   */\n\n\n  my.colors = function (_v) {\n    if (!arguments.length) return colors;\n    colors = _v;\n    return my;\n  };\n  /**\n   * Dispatch On Getter\n   *\n   * @returns {*}\n   */\n\n\n  my.on = function () {\n    let value = dispatch.on.apply(dispatch, arguments);\n    return value === dispatch ? my : value;\n  };\n\n  return my;\n}","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/node_modules/d3-x3d/src/component/bubblesMultiSeries.js"],"names":["d3","dataTransform","componentBubbles","dispatch","dimensions","x","y","z","colors","classed","xScale","yScale","zScale","colorScale","colorDomain","sizeScale","sizeRange","bubbles","mappings","size","color","schemeRdYlGn","arrayUnique","array1","array2","array","concat","a","i","length","j","splice","init","data","rowKeys","valueExtent","coordinatesExtent","summary","extentX","extentY","extentZ","dimensionX","dimensionY","dimensionZ","scaleLinear","domain","range","scaleOrdinal","my","selection","each","bubbleData","d","map","f","key","values","g","value","element","select","addBubbles","call","bubbleGroup","selectAll","enter","append","merge","transition","exit","remove","_v","arguments","on","apply"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport dataTransform from \"../dataTransform\";\nimport componentBubbles from \"./bubbles\";\nimport { dispatch } from \"../events\";\n\n/**\n * Reusable 3D Multi Series Bubble Chart Component\n *\n * @module\n */\nexport default function() {\n\n\t/* Default Properties */\n\tlet dimensions = { x: 40, y: 40, z: 40 };\n\tlet colors = [\"green\", \"red\", \"yellow\", \"steelblue\", \"orange\"];\n\tlet classed = \"d3X3dBubblesMultiSeries\";\n\n\t/* Scales */\n\tlet xScale;\n\tlet yScale;\n\tlet zScale;\n\tlet colorScale;\n\tlet colorDomain = [];\n\tlet sizeScale;\n\tlet sizeRange = [0.5, 3.0];\n\n\t/* Components */\n\tconst bubbles = componentBubbles()\n\t\t.mappings({ x: 'x', y: 'y', z: 'z', size: 'size', color: 'color' })\n\t\t.colors(d3.schemeRdYlGn[8])\n\t\t.sizeRange([2, 2]);\n\n\t/**\n\t * Unique Array\n\t *\n\t * @param {array} array1\n\t * @param {array} array2\n\t * @returns {array}\n\t */\n\tconst arrayUnique = function(array1, array2) {\n\t\tlet array = array1.concat(array2);\n\n\t\tlet a = array.concat();\n\t\tfor (let i = 0; i < a.length; ++i) {\n\t\t\tfor (let j = i + 1; j < a.length; ++j) {\n\t\t\t\tif (a[i] === a[j]) {\n\t\t\t\t\ta.splice(j--, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t};\n\n\t/**\n\n\t /**\n\t * Initialise Data and Scales\n\t *\n\t * @private\n\t * @param {Array} data - Chart data.\n\t */\n\tconst init = function(data) {\n\t\tconst { rowKeys, valueExtent, coordinatesExtent } = dataTransform(data).summary();\n\t\tconst { x: extentX, y: extentY, z: extentZ } = coordinatesExtent;\n\t\tconst { x: dimensionX, y: dimensionY, z: dimensionZ } = dimensions;\n\n\t\tif (typeof xScale === \"undefined\") {\n\t\t\txScale = d3.scaleLinear()\n\t\t\t\t.domain(extentX)\n\t\t\t\t.range([0, dimensionX]);\n\t\t}\n\n\t\tif (typeof yScale === \"undefined\") {\n\t\t\tyScale = d3.scaleLinear()\n\t\t\t\t.domain(extentY)\n\t\t\t\t.range([0, dimensionY]);\n\t\t}\n\n\t\tif (typeof zScale === \"undefined\") {\n\t\t\tzScale = d3.scaleLinear()\n\t\t\t\t.domain(extentZ)\n\t\t\t\t.range([0, dimensionZ]);\n\t\t}\n\n\t\tif (typeof colorScale === \"undefined\") {\n\t\t\tcolorDomain = arrayUnique(colorDomain, rowKeys);\n\t\t\tcolorScale = d3.scaleOrdinal()\n\t\t\t\t.domain(colorDomain)\n\t\t\t\t.range(colors);\n\t\t}\n\n\t\tif (typeof sizeScale === \"undefined\") {\n\t\t\tsizeScale = d3.scaleLinear()\n\t\t\t\t.domain(valueExtent)\n\t\t\t\t.range(sizeRange);\n\t\t}\n\t};\n\n\t/**\n\t * Constructor\n\t *\n\t * @constructor\n\t * @alias bubblesMultiSeries\n\t * @param {d3.selection} selection - The chart holder D3 selection.\n\t */\n\tconst my = function(selection) {\n\t\tselection.each(function(data) {\n\t\t\tinit(data);\n\n\t\t\tconst bubbleData = function(d) {\n\t\t\t\treturn d.map((f) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: f.key,\n\t\t\t\t\t\tvalues: f.values.map((g) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tkey: g.key,\n\t\t\t\t\t\t\t\tvalues: [\n\t\t\t\t\t\t\t\t\t{ key: \"size\", value: g.value },\n\t\t\t\t\t\t\t\t\t{ key: \"color\", value: g.value },\n\t\t\t\t\t\t\t\t\t{ key: \"x\", value: g.x },\n\t\t\t\t\t\t\t\t\t{ key: \"y\", value: g.y },\n\t\t\t\t\t\t\t\t\t{ key: \"z\", value: g.z }\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst element = d3.select(this)\n\t\t\t\t.classed(classed, true);\n\n\t\t\tbubbles.xScale(xScale)\n\t\t\t\t.yScale(yScale)\n\t\t\t\t.zScale(zScale)\n\t\t\t\t.sizeScale(sizeScale);\n\n\t\t\tconst addBubbles = function(d) {\n\t\t\t\tconst color = colorScale(d.key);\n\t\t\t\tbubbles.color(color);\n\t\t\t\td3.select(this).call(bubbles);\n\t\t\t};\n\n\t\t\tconst bubbleGroup = element.selectAll(\".bubbleGroup\")\n\t\t\t\t.data(bubbleData, (d) => d.key);\n\n\t\t\tbubbleGroup.enter()\n\t\t\t\t.append(\"Group\")\n\t\t\t\t.classed(\"bubbleGroup\", true)\n\t\t\t\t.merge(bubbleGroup)\n\t\t\t\t.transition()\n\t\t\t\t.each(addBubbles);\n\n\t\t\tbubbleGroup.exit()\n\t\t\t\t.remove();\n\t\t});\n\t};\n\n\t/**\n\t * Dimensions Getter / Setter\n\t *\n\t * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\n\t * @returns {*}\n\t */\n\tmy.dimensions = function(_v) {\n\t\tif (!arguments.length) return dimensions;\n\t\tdimensions = _v;\n\t\treturn this;\n\t};\n\n\t/**\n\t * X Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 Scale.\n\t * @returns {*}\n\t */\n\tmy.xScale = function(_v) {\n\t\tif (!arguments.length) return xScale;\n\t\txScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Y Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.yScale = function(_v) {\n\t\tif (!arguments.length) return yScale;\n\t\tyScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Z Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 Scale.\n\t * @returns {*}\n\t */\n\tmy.zScale = function(_v) {\n\t\tif (!arguments.length) return zScale;\n\t\tzScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Color Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 color scale.\n\t * @returns {*}\n\t */\n\tmy.colorScale = function(_v) {\n\t\tif (!arguments.length) return colorScale;\n\t\tcolorScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Size Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 size scale.\n\t * @returns {*}\n\t */\n\tmy.sizeScale = function(_v) {\n\t\tif (!arguments.length) return sizeScale;\n\t\tsizeScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Size Range Getter / Setter\n\t *\n\t * @param {number[]} _v - Size min and max (e.g. [0.5, 3.0]).\n\t * @returns {*}\n\t */\n\tmy.sizeRange = function(_v) {\n\t\tif (!arguments.length) return sizeRange;\n\t\tsizeRange = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Colors Getter / Setter\n\t *\n\t * @param {Array} _v - Array of colours used by color scale.\n\t * @returns {*}\n\t */\n\tmy.colors = function(_v) {\n\t\tif (!arguments.length) return colors;\n\t\tcolors = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Dispatch On Getter\n\t *\n\t * @returns {*}\n\t */\n\tmy.on = function() {\n\t\tlet value = dispatch.on.apply(dispatch, arguments);\n\t\treturn value === dispatch ? my : value;\n\t};\n\n\treturn my;\n}\n"]},"metadata":{},"sourceType":"module"}