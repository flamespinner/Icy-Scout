{"ast":null,"code":"//import  './RGraph.bar';\n//import './RGraph.common.core';\nfunction graph() {// Some default variables. These margins are not all hard-and-fast\n  // values - some are increased and some are reduced for each chart.\n\n  /* marginLeft    = 60;\r\n   marginRight   = 25;\r\n   marginTop     = 45;\r\n   marginBottom  = 65;\r\n   marginInner   = 20;\r\n   \r\n   // This is the same for each chart\r\n   yaxisScaleMax = 35;\r\n     // How many animation frames there are\r\n   frames = 20;\r\n   \r\n   // Used later\r\n   state = {}\r\n     // Here are the three datasets for the chart\r\n   data = [\r\n       [5,16,10,12,13,15,16],\r\n       [20,21,24,23,18,19,20],\r\n       [35,34,32,28,26,35,34]\r\n   ];\r\n  \n   // The colors for the bars\r\n   colors = [\r\n       'Gradient(#696:#0f0:#0f0)',\r\n       'Gradient(#966:#f00:#f00)',\r\n       'Gradient(#669:blue:blue)'\r\n   ];\r\n   \r\n   // And the X-axis labels for the chart\r\n   xaxisLabels = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n  \n  \n  \n  \n   // Draw the first bar chart\r\n   function draw1 ()\r\n   {\r\n       state.bar1 = new RGraph.Bar({\r\n           id: 'cvs',\r\n           data: data[2],\r\n           options: {\r\n               \r\n               // These few properties set the chart to be a 3D Bar chart and turn off\r\n               // the 3D axes that are drawn.\r\n               variant: '3d',\r\n               variantThreedYaxis: false,\r\n               variantThreedXaxis: false,\r\n                 colorsStroke: 'rgba(0,0,0,0)',\r\n               colors: [colors[2]],\r\n                 // The background grid is only enabled on this chart - the\r\n               // bar chart at the back\r\n               backgroundGridColor: '#ccc',\r\n               backgroundGridHlinesCount: 5,\r\n               backgroundGridVlinesCount: 14,\r\n               \r\n               // Set the margins based on the values that are defined above\r\n               marginBottom: marginBottom,\r\n               marginTop: marginTop,\r\n               marginLeft: marginLeft,\r\n               marginRight: marginRight,\r\n               marginInner: marginInner,\r\n                 yaxisScaleMax: yaxisScaleMax,\r\n               xaxis: false,\r\n               yaxis: false,\r\n               yaxisScale: false\r\n           }\r\n           \r\n           // Use the grow() effect. The function that gets called at the\r\n           // end of the effect (the draw2() function) starts drawing/animating\r\n           // the second set of bars.\r\n       }).grow({frames: frames}, draw2);\r\n   }\r\n  \n  \n     // This function draws the second bar chart. It's called when the grow()\r\n   // effect of the first bar chart completes.\r\n   function draw2 ()\r\n   {\r\n       state.bar2 = new RGraph.Bar({\r\n           id: 'cvs',\r\n           data: data[1],\r\n           options: {\r\n               // Stipulate 3d but no 3D axes\r\n               variant: '3d',\r\n               variantThreedYaxis: false,\r\n               variantThreedXaxis: false,\r\n                 colorsStroke: 'rgba(0,0,0,0)',\r\n               colors: [colors[1]],\r\n                 // No background grid or X/Y labels for the second and third charts\r\n               backgroundGrid: false,\r\n               yaxisLabels: false,\r\n               xaxisLabels: [],\r\n                 // The default margins are increased on one side and reduced on\r\n               // the other in order to move the chart to the left a little and\r\n               // enhance the perception of depth.\r\n               marginBottom: marginBottom - 10,\r\n               marginTop: marginTop + 10,\r\n               marginLeft: marginLeft - 25,\r\n               marginRight: marginRight + 25,\r\n               marginInner: marginInner,\r\n                 yaxisScaleMax: yaxisScaleMax,\r\n               xaxis: false,\r\n               yaxis: false,\r\n               yaxisScale: false\r\n           }\r\n       \r\n       // Use the grow() effect again and when it's done the draw3() function\r\n       // is called.\r\n       }).grow({frames: frames}, draw3);\r\n   }\r\n  \n  \n     // This function draws the third bar chart\r\n   function draw3 ()\r\n   {\r\n       state.bar3 = new RGraph.Bar({\r\n           id: 'cvs',\r\n           data: data[0],\r\n           options: {\r\n                 // Set the chart to be 3D but without any axes\r\n               variant: '3d',\r\n               variantThreedYaxis: false,\r\n               variantThreedXaxis: false,\r\n                 colorsStroke: 'rgba(0,0,0,0)',\r\n               colors: [colors[0]],\r\n               \r\n               // Now that we're drawing the chart that's \"at the front\" the X-axis labels can be drawn\r\n               xaxisLabels: xaxisLabels,\r\n                 backgroundGrid: false,\r\n               \r\n               // Add and subtract from the default margins in order to move the\r\n               // chart to the left\r\n               marginTop: marginTop + 20,\r\n               marginBottom: marginBottom - 20,\r\n               marginLeft: marginLeft - 40,\r\n               marginRight: marginRight + 50,\r\n               marginInner: marginInner,\r\n                 yaxisScaleMax: yaxisScaleMax,\r\n               xaxis: false,\r\n               yaxis: false,\r\n               yaxisScale: false\r\n           }\r\n       // Use the grow() effect to show the chart but this time with no callback\r\n       // function because there's no subsequent chart to draw.\r\n       //\r\n       // The responsive function is new as of October 2019 and allows you to specify\r\n       // different settings for different screen sizes. Remember that you may need\r\n       //to add settings to the chart again if you remove them for some sizes.\r\n       }).grow({frames: frames});\r\n         state.bar3.responsive([\r\n           {maxWidth: null,width: 650,height: 300,options: {xaxisLabels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],textSize: 12,marginInner: marginInner},callback: function (){state.bar1.set('marginInner', 20);state.bar2.set('marginInner', 20);setTimeout(function (){state.yaxisObj.x = 635;state.yaxisObj.set('textSize', 12);RGraph.redraw();}, 250);}},\r\n           {maxWidth: 900,width: 450,height: 200,options: {xaxisLabels: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],textSize: 8,marginInner: 10}, callback:function (){state.bar1.set('marginInner', 10);state.bar2.set('marginInner', 10);state.yaxisObj.x = 435;state.yaxisObj.set('textSize', 8);RGraph.redraw();}}\r\n       ]);\r\n   }\r\n  \n     // Initiate the drawing of the first chart. The second and then the\r\n   // third charts are initiated by the prior charts animation callback\r\n   // function. This has to be placed before the Y-axis.\r\n   draw1();\r\n  \n  \n   // This drawing API Y-axis is used to show the Y-axis labels on the\r\n   // right-hand-side - though the actual axis is not shown - just the labels.\r\n   state.yaxisObj = new RGraph.Drawing.YAxis({\r\n       id: 'cvs',\r\n       x: 635,\r\n       options: {\r\n           yaxisColor:   'rgba(0,0,0,0)',\r\n           textColor:    'black',\r\n           marginTop:    40,\r\n           marginBottom: 70,\r\n           yaxisScaleMax: 35,\r\n           yaxisPosition: 'right'\r\n       }\r\n   }).draw();*/\n}\n\nexport default graph;","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/src/components/3dchart.js"],"names":["graph"],"mappings":"AAAA;AACA;AAEA,SAASA,KAAT,GAAiB,CACbeAAeA,KAAf","sourcesContent":["//import  './RGraph.bar';\r\n//import './RGraph.common.core';\r\n\r\nfunction graph() {\r\n    // Some default variables. These margins are not all hard-and-fast\r\n    // values - some are increased and some are reduced for each chart.\r\n   /* marginLeft    = 60;\r\n    marginRight   = 25;\r\n    marginTop     = 45;\r\n    marginBottom  = 65;\r\n    marginInner   = 20;\r\n    \r\n    // This is the same for each chart\r\n    yaxisScaleMax = 35;\r\n\r\n    // How many animation frames there are\r\n    frames = 20;\r\n    \r\n    // Used later\r\n    state = {}\r\n\r\n    // Here are the three datasets for the chart\r\n    data = [\r\n        [5,16,10,12,13,15,16],\r\n        [20,21,24,23,18,19,20],\r\n        [35,34,32,28,26,35,34]\r\n    ];\r\n\r\n\r\n    // The colors for the bars\r\n    colors = [\r\n        'Gradient(#696:#0f0:#0f0)',\r\n        'Gradient(#966:#f00:#f00)',\r\n        'Gradient(#669:blue:blue)'\r\n    ];\r\n    \r\n    // And the X-axis labels for the chart\r\n    xaxisLabels = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Draw the first bar chart\r\n    function draw1 ()\r\n    {\r\n        state.bar1 = new RGraph.Bar({\r\n            id: 'cvs',\r\n            data: data[2],\r\n            options: {\r\n                \r\n                // These few properties set the chart to be a 3D Bar chart and turn off\r\n                // the 3D axes that are drawn.\r\n                variant: '3d',\r\n                variantThreedYaxis: false,\r\n                variantThreedXaxis: false,\r\n\r\n                colorsStroke: 'rgba(0,0,0,0)',\r\n                colors: [colors[2]],\r\n\r\n                // The background grid is only enabled on this chart - the\r\n                // bar chart at the back\r\n                backgroundGridColor: '#ccc',\r\n                backgroundGridHlinesCount: 5,\r\n                backgroundGridVlinesCount: 14,\r\n                \r\n                // Set the margins based on the values that are defined above\r\n                marginBottom: marginBottom,\r\n                marginTop: marginTop,\r\n                marginLeft: marginLeft,\r\n                marginRight: marginRight,\r\n                marginInner: marginInner,\r\n\r\n                yaxisScaleMax: yaxisScaleMax,\r\n                xaxis: false,\r\n                yaxis: false,\r\n                yaxisScale: false\r\n            }\r\n            \r\n            // Use the grow() effect. The function that gets called at the\r\n            // end of the effect (the draw2() function) starts drawing/animating\r\n            // the second set of bars.\r\n        }).grow({frames: frames}, draw2);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // This function draws the second bar chart. It's called when the grow()\r\n    // effect of the first bar chart completes.\r\n    function draw2 ()\r\n    {\r\n        state.bar2 = new RGraph.Bar({\r\n            id: 'cvs',\r\n            data: data[1],\r\n            options: {\r\n                // Stipulate 3d but no 3D axes\r\n                variant: '3d',\r\n                variantThreedYaxis: false,\r\n                variantThreedXaxis: false,\r\n\r\n                colorsStroke: 'rgba(0,0,0,0)',\r\n                colors: [colors[1]],\r\n\r\n                // No background grid or X/Y labels for the second and third charts\r\n                backgroundGrid: false,\r\n                yaxisLabels: false,\r\n                xaxisLabels: [],\r\n\r\n                // The default margins are increased on one side and reduced on\r\n                // the other in order to move the chart to the left a little and\r\n                // enhance the perception of depth.\r\n                marginBottom: marginBottom - 10,\r\n                marginTop: marginTop + 10,\r\n                marginLeft: marginLeft - 25,\r\n                marginRight: marginRight + 25,\r\n                marginInner: marginInner,\r\n\r\n                yaxisScaleMax: yaxisScaleMax,\r\n                xaxis: false,\r\n                yaxis: false,\r\n                yaxisScale: false\r\n            }\r\n        \r\n        // Use the grow() effect again and when it's done the draw3() function\r\n        // is called.\r\n        }).grow({frames: frames}, draw3);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // This function draws the third bar chart\r\n    function draw3 ()\r\n    {\r\n        state.bar3 = new RGraph.Bar({\r\n            id: 'cvs',\r\n            data: data[0],\r\n            options: {\r\n\r\n                // Set the chart to be 3D but without any axes\r\n                variant: '3d',\r\n                variantThreedYaxis: false,\r\n                variantThreedXaxis: false,\r\n\r\n                colorsStroke: 'rgba(0,0,0,0)',\r\n                colors: [colors[0]],\r\n                \r\n                // Now that we're drawing the chart that's \"at the front\" the X-axis labels can be drawn\r\n                xaxisLabels: xaxisLabels,\r\n\r\n                backgroundGrid: false,\r\n                \r\n                // Add and subtract from the default margins in order to move the\r\n                // chart to the left\r\n                marginTop: marginTop + 20,\r\n                marginBottom: marginBottom - 20,\r\n                marginLeft: marginLeft - 40,\r\n                marginRight: marginRight + 50,\r\n                marginInner: marginInner,\r\n\r\n                yaxisScaleMax: yaxisScaleMax,\r\n                xaxis: false,\r\n                yaxis: false,\r\n                yaxisScale: false\r\n            }\r\n        // Use the grow() effect to show the chart but this time with no callback\r\n        // function because there's no subsequent chart to draw.\r\n        //\r\n        // The responsive function is new as of October 2019 and allows you to specify\r\n        // different settings for different screen sizes. Remember that you may need\r\n        //to add settings to the chart again if you remove them for some sizes.\r\n        }).grow({frames: frames});\r\n\r\n        state.bar3.responsive([\r\n            {maxWidth: null,width: 650,height: 300,options: {xaxisLabels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],textSize: 12,marginInner: marginInner},callback: function (){state.bar1.set('marginInner', 20);state.bar2.set('marginInner', 20);setTimeout(function (){state.yaxisObj.x = 635;state.yaxisObj.set('textSize', 12);RGraph.redraw();}, 250);}},\r\n            {maxWidth: 900,width: 450,height: 200,options: {xaxisLabels: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],textSize: 8,marginInner: 10}, callback:function (){state.bar1.set('marginInner', 10);state.bar2.set('marginInner', 10);state.yaxisObj.x = 435;state.yaxisObj.set('textSize', 8);RGraph.redraw();}}\r\n        ]);\r\n    }\r\n\r\n\r\n\r\n    // Initiate the drawing of the first chart. The second and then the\r\n    // third charts are initiated by the prior charts animation callback\r\n    // function. This has to be placed before the Y-axis.\r\n    draw1();\r\n\r\n\r\n\r\n\r\n    // This drawing API Y-axis is used to show the Y-axis labels on the\r\n    // right-hand-side - though the actual axis is not shown - just the labels.\r\n    state.yaxisObj = new RGraph.Drawing.YAxis({\r\n        id: 'cvs',\r\n        x: 635,\r\n        options: {\r\n            yaxisColor:   'rgba(0,0,0,0)',\r\n            textColor:    'black',\r\n            marginTop:    40,\r\n            marginBottom: 70,\r\n            yaxisScaleMax: 35,\r\n            yaxisPosition: 'right'\r\n        }\r\n    }).draw();*/\r\n}\r\n\r\nexport default graph;"]},"metadata":{},"sourceType":"module"}