{"ast":null,"code":"function graph() {\n  // Some default variables. These margins are not all hard-and-fast\n  // values - some are increased and some are reduced for each chart.\n  marginLeft = 60;\n  marginRight = 25;\n  marginTop = 45;\n  marginBottom = 65;\n  marginInner = 20; // This is the same for each chart\n\n  yaxisScaleMax = 35; // How many animation frames there are\n\n  frames = 20; // Used later\n\n  state = {}; // Here are the three datasets for the chart\n\n  data = [[5, 16, 10, 12, 13, 15, 16], [20, 21, 24, 23, 18, 19, 20], [35, 34, 32, 28, 26, 35, 34]]; // The colors for the bars\n\n  colors = ['Gradient(#696:#0f0:#0f0)', 'Gradient(#966:#f00:#f00)', 'Gradient(#669:blue:blue)']; // And the X-axis labels for the chart\n\n  xaxisLabels = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; // Draw the first bar chart\n\n  function draw1() {\n    state.bar1 = new RGraph.Bar({\n      id: 'cvs',\n      data: data[2],\n      options: {\n        // These few properties set the chart to be a 3D Bar chart and turn off\n        // the 3D axes that are drawn.\n        variant: '3d',\n        variantThreedYaxis: false,\n        variantThreedXaxis: false,\n        colorsStroke: 'rgba(0,0,0,0)',\n        colors: [colors[2]],\n        // The background grid is only enabled on this chart - the\n        // bar chart at the back\n        backgroundGridColor: '#ccc',\n        backgroundGridHlinesCount: 5,\n        backgroundGridVlinesCount: 14,\n        // Set the margins based on the values that are defined above\n        marginBottom: marginBottom,\n        marginTop: marginTop,\n        marginLeft: marginLeft,\n        marginRight: marginRight,\n        marginInner: marginInner,\n        yaxisScaleMax: yaxisScaleMax,\n        xaxis: false,\n        yaxis: false,\n        yaxisScale: false\n      } // Use the grow() effect. The function that gets called at the\n      // end of the effect (the draw2() function) starts drawing/animating\n      // the second set of bars.\n\n    }).grow({\n      frames: frames\n    }, draw2);\n  } // This function draws the second bar chart. It's called when the grow()\n  // effect of the first bar chart completes.\n\n\n  function draw2() {\n    state.bar2 = new RGraph.Bar({\n      id: 'cvs',\n      data: data[1],\n      options: {\n        // Stipulate 3d but no 3D axes\n        variant: '3d',\n        variantThreedYaxis: false,\n        variantThreedXaxis: false,\n        colorsStroke: 'rgba(0,0,0,0)',\n        colors: [colors[1]],\n        // No background grid or X/Y labels for the second and third charts\n        backgroundGrid: false,\n        yaxisLabels: false,\n        xaxisLabels: [],\n        // The default margins are increased on one side and reduced on\n        // the other in order to move the chart to the left a little and\n        // enhance the perception of depth.\n        marginBottom: marginBottom - 10,\n        marginTop: marginTop + 10,\n        marginLeft: marginLeft - 25,\n        marginRight: marginRight + 25,\n        marginInner: marginInner,\n        yaxisScaleMax: yaxisScaleMax,\n        xaxis: false,\n        yaxis: false,\n        yaxisScale: false\n      } // Use the grow() effect again and when it's done the draw3() function\n      // is called.\n\n    }).grow({\n      frames: frames\n    }, draw3);\n  } // This function draws the third bar chart\n\n\n  function draw3() {\n    state.bar3 = new RGraph.Bar({\n      id: 'cvs',\n      data: data[0],\n      options: {\n        // Set the chart to be 3D but without any axes\n        variant: '3d',\n        variantThreedYaxis: false,\n        variantThreedXaxis: false,\n        colorsStroke: 'rgba(0,0,0,0)',\n        colors: [colors[0]],\n        // Now that we're drawing the chart that's \"at the front\" the X-axis labels can be drawn\n        xaxisLabels: xaxisLabels,\n        backgroundGrid: false,\n        // Add and subtract from the default margins in order to move the\n        // chart to the left\n        marginTop: marginTop + 20,\n        marginBottom: marginBottom - 20,\n        marginLeft: marginLeft - 40,\n        marginRight: marginRight + 50,\n        marginInner: marginInner,\n        yaxisScaleMax: yaxisScaleMax,\n        xaxis: false,\n        yaxis: false,\n        yaxisScale: false\n      } // Use the grow() effect to show the chart but this time with no callback\n      // function because there's no subsequent chart to draw.\n      //\n      // The responsive function is new as of October 2019 and allows you to specify\n      // different settings for different screen sizes. Remember that you may need\n      //to add settings to the chart again if you remove them for some sizes.\n\n    }).grow({\n      frames: frames\n    });\n    state.bar3.responsive([{\n      maxWidth: null,\n      width: 650,\n      height: 300,\n      options: {\n        xaxisLabels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\n        textSize: 12,\n        marginInner: marginInner\n      },\n      callback: function () {\n        state.bar1.set('marginInner', 20);\n        state.bar2.set('marginInner', 20);\n        setTimeout(function () {\n          state.yaxisObj.x = 635;\n          state.yaxisObj.set('textSize', 12);\n          RGraph.redraw();\n        }, 250);\n      }\n    }, {\n      maxWidth: 900,\n      width: 450,\n      height: 200,\n      options: {\n        xaxisLabels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        textSize: 8,\n        marginInner: 10\n      },\n      callback: function () {\n        state.bar1.set('marginInner', 10);\n        state.bar2.set('marginInner', 10);\n        state.yaxisObj.x = 435;\n        state.yaxisObj.set('textSize', 8);\n        RGraph.redraw();\n      }\n    }]);\n  } // Initiate the drawing of the first chart. The second and then the\n  // third charts are initiated by the prior charts animation callback\n  // function. This has to be placed before the Y-axis.\n\n\n  draw1(); // This drawing API Y-axis is used to show the Y-axis labels on the\n  // right-hand-side - though the actual axis is not shown - just the labels.\n\n  state.yaxisObj = new RGraph.Drawing.YAxis({\n    id: 'cvs',\n    x: 635,\n    options: {\n      yaxisColor: 'rgba(0,0,0,0)',\n      textColor: 'black',\n      marginTop: 40,\n      marginBottom: 70,\n      yaxisScaleMax: 35,\n      yaxisPosition: 'right'\n    }\n  }).draw();\n}\n\nexport default graph;","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/src/components/3dchart.js"],"names":["graph","marginLeft","marginRight","marginTop","marginBottom","marginInner","yaxisScaleMax","frames","state","data","colors","xaxisLabels","draw1","bar1","RGraph","Bar","id","options","variant","variantThreedYaxis","variantThreedXaxis","colorsStroke","backgroundGridColor","backgroundGridHlinesCount","backgroundGridVlinesCount","xaxis","yaxis","yaxisScale","grow","draw2","bar2","backgroundGrid","yaxisLabels","draw3","bar3","responsive","maxWidth","width","height","textSize","callback","set","setTimeout","yaxisObj","x","redraw","Drawing","YAxis","yaxisColor","textColor","yaxisPosition","draw"],"mappings":"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","sourcesContent":["function graph() {\r\n    // Some default variables. These margins are not all hard-and-fast\r\n    // values - some are increased and some are reduced for each chart.\r\n    marginLeft    = 60;\r\n    marginRight   = 25;\r\n    marginTop     = 45;\r\n    marginBottom  = 65;\r\n    marginInner   = 20;\r\n    \r\n    // This is the same for each chart\r\n    yaxisScaleMax = 35;\r\n\r\n    // How many animation frames there are\r\n    frames = 20;\r\n    \r\n    // Used later\r\n    state = {}\r\n\r\n    // Here are the three datasets for the chart\r\n    data = [\r\n        [5,16,10,12,13,15,16],\r\n        [20,21,24,23,18,19,20],\r\n        [35,34,32,28,26,35,34]\r\n    ];\r\n\r\n\r\n    // The colors for the bars\r\n    colors = [\r\n        'Gradient(#696:#0f0:#0f0)',\r\n        'Gradient(#966:#f00:#f00)',\r\n        'Gradient(#669:blue:blue)'\r\n    ];\r\n    \r\n    // And the X-axis labels for the chart\r\n    xaxisLabels = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // Draw the first bar chart\r\n    function draw1 ()\r\n    {\r\n        state.bar1 = new RGraph.Bar({\r\n            id: 'cvs',\r\n            data: data[2],\r\n            options: {\r\n                \r\n                // These few properties set the chart to be a 3D Bar chart and turn off\r\n                // the 3D axes that are drawn.\r\n                variant: '3d',\r\n                variantThreedYaxis: false,\r\n                variantThreedXaxis: false,\r\n\r\n                colorsStroke: 'rgba(0,0,0,0)',\r\n                colors: [colors[2]],\r\n\r\n                // The background grid is only enabled on this chart - the\r\n                // bar chart at the back\r\n                backgroundGridColor: '#ccc',\r\n                backgroundGridHlinesCount: 5,\r\n                backgroundGridVlinesCount: 14,\r\n                \r\n                // Set the margins based on the values that are defined above\r\n                marginBottom: marginBottom,\r\n                marginTop: marginTop,\r\n                marginLeft: marginLeft,\r\n                marginRight: marginRight,\r\n                marginInner: marginInner,\r\n\r\n                yaxisScaleMax: yaxisScaleMax,\r\n                xaxis: false,\r\n                yaxis: false,\r\n                yaxisScale: false\r\n            }\r\n            \r\n            // Use the grow() effect. The function that gets called at the\r\n            // end of the effect (the draw2() function) starts drawing/animating\r\n            // the second set of bars.\r\n        }).grow({frames: frames}, draw2);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // This function draws the second bar chart. It's called when the grow()\r\n    // effect of the first bar chart completes.\r\n    function draw2 ()\r\n    {\r\n        state.bar2 = new RGraph.Bar({\r\n            id: 'cvs',\r\n            data: data[1],\r\n            options: {\r\n                // Stipulate 3d but no 3D axes\r\n                variant: '3d',\r\n                variantThreedYaxis: false,\r\n                variantThreedXaxis: false,\r\n\r\n                colorsStroke: 'rgba(0,0,0,0)',\r\n                colors: [colors[1]],\r\n\r\n                // No background grid or X/Y labels for the second and third charts\r\n                backgroundGrid: false,\r\n                yaxisLabels: false,\r\n                xaxisLabels: [],\r\n\r\n                // The default margins are increased on one side and reduced on\r\n                // the other in order to move the chart to the left a little and\r\n                // enhance the perception of depth.\r\n                marginBottom: marginBottom - 10,\r\n                marginTop: marginTop + 10,\r\n                marginLeft: marginLeft - 25,\r\n                marginRight: marginRight + 25,\r\n                marginInner: marginInner,\r\n\r\n                yaxisScaleMax: yaxisScaleMax,\r\n                xaxis: false,\r\n                yaxis: false,\r\n                yaxisScale: false\r\n            }\r\n        \r\n        // Use the grow() effect again and when it's done the draw3() function\r\n        // is called.\r\n        }).grow({frames: frames}, draw3);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // This function draws the third bar chart\r\n    function draw3 ()\r\n    {\r\n        state.bar3 = new RGraph.Bar({\r\n            id: 'cvs',\r\n            data: data[0],\r\n            options: {\r\n\r\n                // Set the chart to be 3D but without any axes\r\n                variant: '3d',\r\n                variantThreedYaxis: false,\r\n                variantThreedXaxis: false,\r\n\r\n                colorsStroke: 'rgba(0,0,0,0)',\r\n                colors: [colors[0]],\r\n                \r\n                // Now that we're drawing the chart that's \"at the front\" the X-axis labels can be drawn\r\n                xaxisLabels: xaxisLabels,\r\n\r\n                backgroundGrid: false,\r\n                \r\n                // Add and subtract from the default margins in order to move the\r\n                // chart to the left\r\n                marginTop: marginTop + 20,\r\n                marginBottom: marginBottom - 20,\r\n                marginLeft: marginLeft - 40,\r\n                marginRight: marginRight + 50,\r\n                marginInner: marginInner,\r\n\r\n                yaxisScaleMax: yaxisScaleMax,\r\n                xaxis: false,\r\n                yaxis: false,\r\n                yaxisScale: false\r\n            }\r\n        // Use the grow() effect to show the chart but this time with no callback\r\n        // function because there's no subsequent chart to draw.\r\n        //\r\n        // The responsive function is new as of October 2019 and allows you to specify\r\n        // different settings for different screen sizes. Remember that you may need\r\n        //to add settings to the chart again if you remove them for some sizes.\r\n        }).grow({frames: frames});\r\n\r\n        state.bar3.responsive([\r\n            {maxWidth: null,width: 650,height: 300,options: {xaxisLabels:['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'],textSize: 12,marginInner: marginInner},callback: function (){state.bar1.set('marginInner', 20);state.bar2.set('marginInner', 20);setTimeout(function (){state.yaxisObj.x = 635;state.yaxisObj.set('textSize', 12);RGraph.redraw();}, 250);}},\r\n            {maxWidth: 900,width: 450,height: 200,options: {xaxisLabels: ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'],textSize: 8,marginInner: 10}, callback:function (){state.bar1.set('marginInner', 10);state.bar2.set('marginInner', 10);state.yaxisObj.x = 435;state.yaxisObj.set('textSize', 8);RGraph.redraw();}}\r\n        ]);\r\n    }\r\n\r\n\r\n\r\n    // Initiate the drawing of the first chart. The second and then the\r\n    // third charts are initiated by the prior charts animation callback\r\n    // function. This has to be placed before the Y-axis.\r\n    draw1();\r\n\r\n\r\n\r\n\r\n    // This drawing API Y-axis is used to show the Y-axis labels on the\r\n    // right-hand-side - though the actual axis is not shown - just the labels.\r\n    state.yaxisObj = new RGraph.Drawing.YAxis({\r\n        id: 'cvs',\r\n        x: 635,\r\n        options: {\r\n            yaxisColor:   'rgba(0,0,0,0)',\r\n            textColor:    'black',\r\n            marginTop:    40,\r\n            marginBottom: 70,\r\n            yaxisScaleMax: 35,\r\n            yaxisPosition: 'right'\r\n        }\r\n    }).draw();\r\n}\r\n\r\nexport default graph;"]},"metadata":{},"sourceType":"module"}