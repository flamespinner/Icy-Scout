{"ast":null,"code":"import * as d3 from \"d3\";\nimport dataTransform from \"../dataTransform\";\nimport componentBars from \"./bars\";\n/**\n * Reusable 3D Heat Map Component\n *\n * @module\n */\n\nexport default function () {\n  /* Default Properties */\n  let dimensions = {\n    x: 40,\n    y: 40,\n    z: 40\n  };\n  let colors = [\"#1e253f\", \"#e33b30\"];\n  let classed = \"d3X3dHeatMap\";\n  /* Scales */\n\n  let xScale;\n  let yScale;\n  let zScale;\n  let colorScale;\n  /* Components */\n\n  const bars = componentBars();\n  /**\n   * Initialise Data and Scales\n   *\n   * @private\n   * @param {Array} data - Chart data.\n   */\n\n  const init = function (data) {\n    const {\n      rowKeys,\n      columnKeys,\n      valueMax\n    } = dataTransform(data).summary();\n    const valueExtent = [0, valueMax];\n    const {\n      x: dimensionX,\n      y: dimensionY,\n      z: dimensionZ\n    } = dimensions;\n\n    if (typeof xScale === \"undefined\") {\n      xScale = d3.scaleBand().domain(columnKeys).range([0, dimensionX]).paddingOuter(0.5).paddingInner(0.1).align(1);\n    }\n\n    if (typeof yScale === \"undefined\") {\n      yScale = d3.scaleLinear().domain(valueExtent).range([0, dimensionY]).nice();\n    }\n\n    if (typeof zScale === \"undefined\") {\n      zScale = d3.scaleBand().domain(rowKeys.reverse()).range([0, dimensionZ]).paddingOuter(0.5).paddingInner(0.1).align(1);\n    }\n\n    if (typeof colorScale === \"undefined\") {\n      colorScale = d3.scaleLinear().domain(valueExtent).range(colors);\n    }\n  };\n  /**\n   * Constructor\n   *\n   * @constructor\n   * @alias heatMap\n   * @param {d3.selection} selection - The chart holder D3 selection.\n   */\n\n\n  const my = function (selection) {\n    selection.each(function (data) {\n      init(data);\n      const element = d3.select(this).classed(classed, true);\n      bars.xScale(xScale).yScale(yScale).dimensions({\n        x: dimensions.x,\n        y: dimensions.y,\n        z: zScale.bandwidth()\n      }).colorScale(colorScale);\n\n      const addBars = function () {\n        d3.select(this).call(bars);\n      };\n\n      const barGroup = element.selectAll(\".barGroup\").data(d => d, d => d.key);\n      barGroup.enter().append(\"Transform\").classed(\"barGroup\", true).merge(barGroup).transition().attr(\"translation\", d => {\n        const x = 0;\n        const y = 0;\n        const z = zScale(d.key);\n        return x + \" \" + y + \" \" + z;\n      }).each(addBars);\n      barGroup.exit().remove();\n    });\n  };\n  /**\n   * Dimensions Getter / Setter\n   *\n   * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\n   * @returns {*}\n   */\n\n\n  my.dimensions = function (_v) {\n    if (!arguments.length) return dimensions;\n    dimensions = _v;\n    return this;\n  };\n  /**\n   * X Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.xScale = function (_v) {\n    if (!arguments.length) return xScale;\n    xScale = _v;\n    return my;\n  };\n  /**\n   * Y Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.yScale = function (_v) {\n    if (!arguments.length) return yScale;\n    yScale = _v;\n    return my;\n  };\n  /**\n   * Z Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.zScale = function (_v) {\n    if (!arguments.length) return zScale;\n    zScale = _v;\n    return my;\n  };\n  /**\n   * Color Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 color scale.\n   * @returns {*}\n   */\n\n\n  my.colorScale = function (_v) {\n    if (!arguments.length) return colorScale;\n    colorScale = _v;\n    return my;\n  };\n  /**\n   * Colors Getter / Setter\n   *\n   * @param {Array} _v - Array of colours used by color scale.\n   * @returns {*}\n   */\n\n\n  my.colors = function (_v) {\n    if (!arguments.length) return colors;\n    colors = _v;\n    return my;\n  };\n\n  return my;\n}","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/node_modules/d3-x3d/src/component/heatMap.js"],"names":["d3","dataTransform","componentBars","dimensions","x","y","z","colors","classed","xScale","yScale","zScale","colorScale","bars","init","data","rowKeys","columnKeys","valueMax","summary","valueExtent","dimensionX","dimensionY","dimensionZ","scaleBand","domain","range","paddingOuter","paddingInner","align","scaleLinear","nice","reverse","my","selection","each","element","select","bandwidth","addBars","call","barGroup","selectAll","d","key","enter","append","merge","transition","attr","exit","remove","_v","arguments","length"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport dataTransform from \"../dataTransform\";\nimport componentBars from \"./bars\";\n\n/**\n * Reusable 3D Heat Map Component\n *\n * @module\n */\nexport default function() {\n\n\t/* Default Properties */\n\tlet dimensions = { x: 40, y: 40, z: 40 };\n\tlet colors = [\"#1e253f\", \"#e33b30\"];\n\tlet classed = \"d3X3dHeatMap\";\n\n\t/* Scales */\n\tlet xScale;\n\tlet yScale;\n\tlet zScale;\n\tlet colorScale;\n\n\t/* Components */\n\tconst bars = componentBars();\n\n\t/**\n\t * Initialise Data and Scales\n\t *\n\t * @private\n\t * @param {Array} data - Chart data.\n\t */\n\tconst init = function(data) {\n\t\tconst { rowKeys, columnKeys, valueMax } = dataTransform(data).summary();\n\t\tconst valueExtent = [0, valueMax];\n\t\tconst { x: dimensionX, y: dimensionY, z: dimensionZ } = dimensions;\n\n\t\tif (typeof xScale === \"undefined\") {\n\t\t\txScale = d3.scaleBand()\n\t\t\t\t.domain(columnKeys)\n\t\t\t\t.range([0, dimensionX])\n\t\t\t\t.paddingOuter(0.5)\n\t\t\t\t.paddingInner(0.1)\n\t\t\t\t.align(1);\n\t\t}\n\n\t\tif (typeof yScale === \"undefined\") {\n\t\t\tyScale = d3.scaleLinear()\n\t\t\t\t.domain(valueExtent)\n\t\t\t\t.range([0, dimensionY])\n\t\t\t\t.nice();\n\t\t}\n\n\t\tif (typeof zScale === \"undefined\") {\n\t\t\tzScale = d3.scaleBand()\n\t\t\t\t.domain(rowKeys.reverse())\n\t\t\t\t.range([0, dimensionZ])\n\t\t\t\t.paddingOuter(0.5)\n\t\t\t\t.paddingInner(0.1)\n\t\t\t\t.align(1);\n\t\t}\n\n\t\tif (typeof colorScale === \"undefined\") {\n\t\t\tcolorScale = d3.scaleLinear()\n\t\t\t\t.domain(valueExtent)\n\t\t\t\t.range(colors);\n\t\t}\n\t};\n\n\t/**\n\t * Constructor\n\t *\n\t * @constructor\n\t * @alias heatMap\n\t * @param {d3.selection} selection - The chart holder D3 selection.\n\t */\n\tconst my = function(selection) {\n\t\tselection.each(function(data) {\n\t\t\tinit(data);\n\n\t\t\tconst element = d3.select(this)\n\t\t\t\t.classed(classed, true);\n\n\t\t\tbars.xScale(xScale)\n\t\t\t\t.yScale(yScale)\n\t\t\t\t.dimensions({\n\t\t\t\t\tx: dimensions.x,\n\t\t\t\t\ty: dimensions.y,\n\t\t\t\t\tz: zScale.bandwidth()\n\t\t\t\t})\n\t\t\t\t.colorScale(colorScale);\n\n\t\t\tconst addBars = function() {\n\t\t\t\td3.select(this).call(bars);\n\t\t\t};\n\n\t\t\tconst barGroup = element.selectAll(\".barGroup\")\n\t\t\t\t.data((d) => d, (d) => d.key);\n\n\t\t\tbarGroup.enter()\n\t\t\t\t.append(\"Transform\")\n\t\t\t\t.classed(\"barGroup\", true)\n\t\t\t\t.merge(barGroup)\n\t\t\t\t.transition()\n\t\t\t\t.attr(\"translation\", (d) => {\n\t\t\t\t\tconst x = 0;\n\t\t\t\t\tconst y = 0;\n\t\t\t\t\tconst z = zScale(d.key);\n\t\t\t\t\treturn x + \" \" + y + \" \" + z;\n\t\t\t\t})\n\t\t\t\t.each(addBars);\n\n\t\t\tbarGroup.exit()\n\t\t\t\t.remove();\n\t\t});\n\t};\n\n\t/**\n\t * Dimensions Getter / Setter\n\t *\n\t * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\n\t * @returns {*}\n\t */\n\tmy.dimensions = function(_v) {\n\t\tif (!arguments.length) return dimensions;\n\t\tdimensions = _v;\n\t\treturn this;\n\t};\n\n\t/**\n\t * X Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.xScale = function(_v) {\n\t\tif (!arguments.length) return xScale;\n\t\txScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Y Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.yScale = function(_v) {\n\t\tif (!arguments.length) return yScale;\n\t\tyScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Z Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.zScale = function(_v) {\n\t\tif (!arguments.length) return zScale;\n\t\tzScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Color Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 color scale.\n\t * @returns {*}\n\t */\n\tmy.colorScale = function(_v) {\n\t\tif (!arguments.length) return colorScale;\n\t\tcolorScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Colors Getter / Setter\n\t *\n\t * @param {Array} _v - Array of colours used by color scale.\n\t * @returns {*}\n\t */\n\tmy.colors = function(_v) {\n\t\tif (!arguments.length) return colors;\n\t\tcolors = _v;\n\t\treturn my;\n\t};\n\n\treturn my;\n}\n"]},"metadata":{},"sourceType":"module"}