{"ast":null,"code":"import * as d3 from \"d3\";\nimport dataTransform from \"../dataTransform\";\nimport component from \"../component\";\nimport { createScene } from \"../base\";\n/**\n * Reusable 3D Bubble Chart\n *\n * @module\n *\n * @example\n * let chartHolder = d3.select(\"#chartholder\");\n *\n * let myData = [...];\n *\n * let myChart = d3.x3d.chart.bubbleChart();\n *\n * chartHolder.datum(myData).call(myChart);\n *\n * @see https://datavizproject.com/data-type/bubble-chart/\n */\n\nexport default function () {\n  /* Default Properties */\n  let width = 500;\n  let height = 500;\n  let dimensions = {\n    x: 40,\n    y: 40,\n    z: 40\n  };\n  let colors = [\"green\", \"red\", \"yellow\", \"steelblue\", \"orange\"];\n  let sizeRange = [0.5, 3.5];\n  let classed = \"d3X3dBubbleChart\";\n  let debug = false;\n  /* Scales */\n\n  let xScale;\n  let yScale;\n  let zScale;\n  let colorScale;\n  let sizeScale;\n  /* Components */\n\n  const viewpoint = component.viewpoint();\n  const axis = component.axisThreePlane();\n  const bubbles = component.bubblesMultiSeries();\n  const light = component.light();\n  /**\n   * Initialise Data and Scales\n   *\n   * @private\n   * @param {Array} data - Chart data.\n   */\n\n  const init = function (data) {\n    const {\n      valueExtent,\n      coordinatesExtent,\n      rowKeys\n    } = dataTransform(data).summary();\n    const {\n      x: extentX,\n      y: extentY,\n      z: extentZ\n    } = coordinatesExtent;\n    const {\n      x: dimensionX,\n      y: dimensionY,\n      z: dimensionZ\n    } = dimensions;\n    xScale = d3.scaleLinear().domain(extentX).range([0, dimensionX]);\n    yScale = d3.scaleLinear().domain(extentY).range([0, dimensionY]);\n    zScale = d3.scaleLinear().domain(extentZ).range([0, dimensionZ]);\n    colorScale = d3.scaleOrdinal().domain(rowKeys).range(colors);\n    sizeScale = d3.scaleLinear().domain(valueExtent).range(sizeRange);\n  };\n  /**\n   * Constructor\n   *\n   * @constructor\n   * @alias bubbleChart\n   * @param {d3.selection} selection - The chart holder D3 selection.\n   */\n\n\n  const my = function (selection) {\n    const layers = [\"axis\", \"bubbles\"];\n    const scene = createScene(selection, layers, classed, width, height, debug);\n    selection.each(data => {\n      init(data); // Add Viewpoint\n\n      viewpoint.centerOfRotation([dimensions.x / 2, dimensions.y / 2, dimensions.z / 2]);\n      scene.call(viewpoint); // Add Axis\n\n      axis.xScale(xScale).yScale(yScale).zScale(zScale);\n      scene.select(\".axis\").call(axis); // Add Bubbles\n\n      bubbles.xScale(xScale).yScale(yScale).zScale(zScale).sizeScale(sizeScale).colorScale(colorScale);\n      scene.select(\".bubbles\").datum(data).call(bubbles); // Add Light\n\n      scene.call(light);\n    });\n  };\n  /**\n   * Width Getter / Setter\n   *\n   * @param {number} _v - X3D canvas width in px.\n   * @returns {*}\n   */\n\n\n  my.width = function (_v) {\n    if (!arguments.length) return width;\n    width = _v;\n    return this;\n  };\n  /**\n   * Height Getter / Setter\n   *\n   * @param {number} _v - X3D canvas height in px.\n   * @returns {*}\n   */\n\n\n  my.height = function (_v) {\n    if (!arguments.length) return height;\n    height = _v;\n    return this;\n  };\n  /**\n   * Dimensions Getter / Setter\n   *\n   * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\n   * @returns {*}\n   */\n\n\n  my.dimensions = function (_v) {\n    if (!arguments.length) return dimensions;\n    dimensions = _v;\n    return this;\n  };\n  /**\n   * X Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.xScale = function (_v) {\n    if (!arguments.length) return xScale;\n    xScale = _v;\n    return my;\n  };\n  /**\n   * Y Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.yScale = function (_v) {\n    if (!arguments.length) return yScale;\n    yScale = _v;\n    return my;\n  };\n  /**\n   * Z Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 scale.\n   * @returns {*}\n   */\n\n\n  my.zScale = function (_v) {\n    if (!arguments.length) return zScale;\n    zScale = _v;\n    return my;\n  };\n  /**\n   * Color Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 color scale.\n   * @returns {*}\n   */\n\n\n  my.colorScale = function (_v) {\n    if (!arguments.length) return colorScale;\n    colorScale = _v;\n    return my;\n  };\n  /**\n   * Colors Getter / Setter\n   *\n   * @param {Array} _v - Array of colours used by color scale.\n   * @returns {*}\n   */\n\n\n  my.colors = function (_v) {\n    if (!arguments.length) return colors;\n    colors = _v;\n    return my;\n  };\n  /**\n   * Size Scale Getter / Setter\n   *\n   * @param {d3.scale} _v - D3 color scale.\n   * @returns {*}\n   */\n\n\n  my.sizeScale = function (_v) {\n    if (!arguments.length) return sizeScale;\n    sizeScale = _v;\n    return my;\n  };\n  /**\n   * Size Range Getter / Setter\n   *\n   * @param {number[]} _v - Size min and max (e.g. [0.5, 3.0]).\n   * @returns {*}\n   */\n\n\n  my.sizeRange = function (_v) {\n    if (!arguments.length) return sizeRange;\n    sizeRange = _v;\n    return my;\n  };\n  /**\n   * Debug Getter / Setter\n   *\n   * @param {boolean} _v - Show debug log and stats. True/False.\n   * @returns {*}\n   */\n\n\n  my.debug = function (_v) {\n    if (!arguments.length) return debug;\n    debug = _v;\n    return my;\n  };\n\n  return my;\n}","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/node_modules/d3-x3d/src/chart/bubbleChart.js"],"names":["d3","dataTransform","component","createScene","width","height","dimensions","x","y","z","colors","sizeRange","classed","debug","xScale","yScale","zScale","colorScale","sizeScale","viewpoint","axis","axisThreePlane","bubbles","bubblesMultiSeries","light","init","data","valueExtent","coordinatesExtent","rowKeys","summary","extentX","extentY","extentZ","dimensionX","dimensionY","dimensionZ","scaleLinear","domain","range","scaleOrdinal","my","selection","layers","scene","each","centerOfRotation","call","select","datum","_v","arguments","length"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport dataTransform from \"../dataTransform\";\nimport component from \"../component\";\nimport { createScene } from \"../base\";\n\n/**\n * Reusable 3D Bubble Chart\n *\n * @module\n *\n * @example\n * let chartHolder = d3.select(\"#chartholder\");\n *\n * let myData = [...];\n *\n * let myChart = d3.x3d.chart.bubbleChart();\n *\n * chartHolder.datum(myData).call(myChart);\n *\n * @see https://datavizproject.com/data-type/bubble-chart/\n */\nexport default function() {\n\n\t/* Default Properties */\n\tlet width = 500;\n\tlet height = 500;\n\tlet dimensions = { x: 40, y: 40, z: 40 };\n\tlet colors = [\"green\", \"red\", \"yellow\", \"steelblue\", \"orange\"];\n\tlet sizeRange = [0.5, 3.5];\n\tlet classed = \"d3X3dBubbleChart\";\n\tlet debug = false;\n\n\t/* Scales */\n\tlet xScale;\n\tlet yScale;\n\tlet zScale;\n\tlet colorScale;\n\tlet sizeScale;\n\n\t/* Components */\n\tconst viewpoint = component.viewpoint();\n\tconst axis = component.axisThreePlane();\n\tconst bubbles = component.bubblesMultiSeries();\n\tconst light = component.light();\n\n\t/**\n\t * Initialise Data and Scales\n\t *\n\t * @private\n\t * @param {Array} data - Chart data.\n\t */\n\tconst init = function(data) {\n\t\tconst { valueExtent, coordinatesExtent, rowKeys } = dataTransform(data).summary();\n\t\tconst { x: extentX, y: extentY, z: extentZ } = coordinatesExtent;\n\t\tconst { x: dimensionX, y: dimensionY, z: dimensionZ } = dimensions;\n\n\t\txScale = d3.scaleLinear()\n\t\t\t.domain(extentX)\n\t\t\t.range([0, dimensionX]);\n\n\t\tyScale = d3.scaleLinear()\n\t\t\t.domain(extentY)\n\t\t\t.range([0, dimensionY]);\n\n\t\tzScale = d3.scaleLinear()\n\t\t\t.domain(extentZ)\n\t\t\t.range([0, dimensionZ]);\n\n\t\tcolorScale = d3.scaleOrdinal()\n\t\t\t.domain(rowKeys)\n\t\t\t.range(colors);\n\n\t\tsizeScale = d3.scaleLinear()\n\t\t\t.domain(valueExtent)\n\t\t\t.range(sizeRange);\n\t};\n\n\t/**\n\t * Constructor\n\t *\n\t * @constructor\n\t * @alias bubbleChart\n\t * @param {d3.selection} selection - The chart holder D3 selection.\n\t */\n\tconst my = function(selection) {\n\t\tconst layers = [\"axis\", \"bubbles\"];\n\t\tconst scene = createScene(selection, layers, classed, width, height, debug);\n\n\t\tselection.each((data) => {\n\t\t\tinit(data);\n\n\t\t\t// Add Viewpoint\n\t\t\tviewpoint.centerOfRotation([dimensions.x / 2, dimensions.y / 2, dimensions.z / 2]);\n\n\t\t\tscene.call(viewpoint);\n\n\t\t\t// Add Axis\n\t\t\taxis.xScale(xScale)\n\t\t\t\t.yScale(yScale)\n\t\t\t\t.zScale(zScale);\n\n\t\t\tscene.select(\".axis\")\n\t\t\t\t.call(axis);\n\n\t\t\t// Add Bubbles\n\t\t\tbubbles.xScale(xScale)\n\t\t\t\t.yScale(yScale)\n\t\t\t\t.zScale(zScale)\n\t\t\t\t.sizeScale(sizeScale)\n\t\t\t\t.colorScale(colorScale);\n\n\t\t\tscene.select(\".bubbles\")\n\t\t\t\t.datum(data)\n\t\t\t\t.call(bubbles);\n\n\t\t\t// Add Light\n\t\t\tscene.call(light);\n\t\t});\n\t};\n\n\t/**\n\t * Width Getter / Setter\n\t *\n\t * @param {number} _v - X3D canvas width in px.\n\t * @returns {*}\n\t */\n\tmy.width = function(_v) {\n\t\tif (!arguments.length) return width;\n\t\twidth = _v;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Height Getter / Setter\n\t *\n\t * @param {number} _v - X3D canvas height in px.\n\t * @returns {*}\n\t */\n\tmy.height = function(_v) {\n\t\tif (!arguments.length) return height;\n\t\theight = _v;\n\t\treturn this;\n\t};\n\n\t/**\n\t * Dimensions Getter / Setter\n\t *\n\t * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\n\t * @returns {*}\n\t */\n\tmy.dimensions = function(_v) {\n\t\tif (!arguments.length) return dimensions;\n\t\tdimensions = _v;\n\t\treturn this;\n\t};\n\n\t/**\n\t * X Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.xScale = function(_v) {\n\t\tif (!arguments.length) return xScale;\n\t\txScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Y Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.yScale = function(_v) {\n\t\tif (!arguments.length) return yScale;\n\t\tyScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Z Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 scale.\n\t * @returns {*}\n\t */\n\tmy.zScale = function(_v) {\n\t\tif (!arguments.length) return zScale;\n\t\tzScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Color Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 color scale.\n\t * @returns {*}\n\t */\n\tmy.colorScale = function(_v) {\n\t\tif (!arguments.length) return colorScale;\n\t\tcolorScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Colors Getter / Setter\n\t *\n\t * @param {Array} _v - Array of colours used by color scale.\n\t * @returns {*}\n\t */\n\tmy.colors = function(_v) {\n\t\tif (!arguments.length) return colors;\n\t\tcolors = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Size Scale Getter / Setter\n\t *\n\t * @param {d3.scale} _v - D3 color scale.\n\t * @returns {*}\n\t */\n\tmy.sizeScale = function(_v) {\n\t\tif (!arguments.length) return sizeScale;\n\t\tsizeScale = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Size Range Getter / Setter\n\t *\n\t * @param {number[]} _v - Size min and max (e.g. [0.5, 3.0]).\n\t * @returns {*}\n\t */\n\tmy.sizeRange = function(_v) {\n\t\tif (!arguments.length) return sizeRange;\n\t\tsizeRange = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Debug Getter / Setter\n\t *\n\t * @param {boolean} _v - Show debug log and stats. True/False.\n\t * @returns {*}\n\t */\n\tmy.debug = function(_v) {\n\t\tif (!arguments.length) return debug;\n\t\tdebug = _v;\n\t\treturn my;\n\t};\n\n\treturn my;\n}\n"]},"metadata":{},"sourceType":"module"}