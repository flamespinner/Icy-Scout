{"ast":null,"code":"import * as d3 from \"d3\";\n/**\r\n * Reusable X3D Base and Scene Component\r\n *\r\n * @module\r\n */\n\nexport function createX3d(selection, width, height, debug) {\n  // Create X3D element (if it does not exist already)\n  let x3d = selection.selectAll(\"X3D\").data([0]).enter().append(\"X3D\").attr(\"width\", width + \"px\").attr(\"height\", height + \"px\").attr(\"showLog\", debug ? \"true\" : \"false\").attr(\"showStat\", debug ? \"true\" : \"false\").attr(\"useGeoCache\", false);\n  return x3d;\n}\n/**\r\n * Reusable X3D Base and Scene Component\r\n *\r\n * @module\r\n */\n\nexport function createScene2(x3d, layers, classed) {\n  // Create Scene\n  let scene = x3d.selectAll(\"Scene\").data([0]).enter().append(\"Scene\"); // Disable gamma correction\n\n  scene.append(\"Environment\").attr(\"gammaCorrectionDefault\", \"none\"); // Add a white background\n\n  scene.append(\"Background\").attr(\"groundColor\", \"1 1 1\").attr(\"skyColor\", \"1 1 1\"); // Add layer groups\n\n  scene.classed(classed, true).selectAll(\"Group\").data(layers).enter().append(\"Group\").attr(\"class\", d => d);\n  return scene;\n}\n/**\r\n * Reusable X3D Base and Scene Component\r\n *\r\n * @module\r\n */\n\nexport function createScene(selection, layers, classed, width, height, debug) {\n  let x3d = createX3d(selection, width, height, debug);\n  let x3d2 = selection.select(\"X3D\");\n  console.log(x3d);\n  console.log(x3d2);\n  let scene = createScene2(x3d, layers, classed);\n  let scene2 = selection.select(\"Scene\");\n  console.log(scene);\n  console.log(scene2);\n  return scene2;\n}","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/src/base.js"],"names":["d3","createX3d","selection","width","height","debug","x3d","selectAll","data","enter","append","attr","createScene2","layers","classed","scene","d","createScene","x3d2","select","console","log","scene2"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,CAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoD;AAC1D;AACA,MAAIC,GAAG,GAAGJ,SAAS,CAACK,SAAV,CAAoB,KAApB,EACRC,IADQ,CACH,CAAC,CAAD,CADG,EAERC,KAFQ,GAGRC,MAHQ,CAGD,KAHC,EAIRC,IAJQ,CAIH,OAJG,EAIMR,KAAK,GAAG,IAJd,EAKRQ,IALQ,CAKH,QALG,EAKOP,MAAM,GAAG,IALhB,EAMRO,IANQ,CAMH,SANG,EAMQN,KAAK,GAAG,MAAH,GAAY,OANzB,EAORM,IAPQ,CAOH,UAPG,EAOSN,KAAK,GAAG,MAAH,GAAY,OAP1B,EAQRM,IARQ,CAQH,aARG,EAQY,KARZ,CAAV;AAUA,SAAOL,GAAP;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASM,YAAT,CAAsBN,GAAtB,EAA2BO,MAA3B,EAAmCC,OAAnC,EAA4C;AAClD;AACA,MAAIC,KAAK,GAAGT,GAAG,CAACC,SAAJ,CAAc,OAAd,EACVC,IADU,CACL,CAAC,CAAD,CADK,EAEVC,KAFU,GAGVC,MAHU,CAGH,OAHG,CAAZ,CAFkD,CAOlD;;AACAK,EAAAA,KAAK,CAACL,MAAN,CAAa,aAAb,EACEC,IADF,CACO,wBADP,EACiC,MADjC,EARkD,CAWlD;;AACAI,EAAAA,KAAK,CAACL,MAAN,CAAa,YAAb,EACEC,IADF,CACO,aADP,EACsB,OADtB,EAEEA,IAFF,CAEO,UAFP,EAEmB,OAFnB,EAZkD,CAgBlD;;AACAI,EAAAA,KAAK,CAACD,OAAN,CAAcA,OAAd,EAAuB,IAAvB,EACEP,SADF,CACY,OADZ,EAEEC,IAFF,CAEOK,MAFP,EAGEJ,KAHF,GAIEC,MAJF,CAIS,OAJT,EAKEC,IALF,CAKO,OALP,EAKiBK,CAAD,IAAOA,CALvB;AAOA,SAAOD,KAAP;AACA;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,WAAT,CAAqBf,SAArB,EAAgCW,MAAhC,EAAwCC,OAAxC,EAAiDX,KAAjD,EAAwDC,MAAxD,EAAgEC,KAAhE,EAAuE;AAC7E,MAAIC,GAAG,GAAGL,SAAS,CAACC,SAAD,EAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,KAA3B,CAAnB;AACA,MAAIa,IAAI,GAAGhB,SAAS,CAACiB,MAAV,CAAiB,KAAjB,CAAX;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,MAAIH,KAAK,GAAGH,YAAY,CAACN,GAAD,EAAMO,MAAN,EAAcC,OAAd,CAAxB;AACA,MAAIQ,MAAM,GAAGpB,SAAS,CAACiB,MAAV,CAAiB,OAAjB,CAAb;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,SAAOA,MAAP;AACA","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n/**\r\n * Reusable X3D Base and Scene Component\r\n *\r\n * @module\r\n */\r\nexport function createX3d(selection, width, height, debug) {\r\n\t// Create X3D element (if it does not exist already)\r\n\tlet x3d = selection.selectAll(\"X3D\")\r\n\t\t.data([0])\r\n\t\t.enter()\r\n\t\t.append(\"X3D\")\r\n\t\t.attr(\"width\", width + \"px\")\r\n\t\t.attr(\"height\", height + \"px\")\r\n\t\t.attr(\"showLog\", debug ? \"true\" : \"false\")\r\n\t\t.attr(\"showStat\", debug ? \"true\" : \"false\")\r\n\t\t.attr(\"useGeoCache\", false);\r\n\r\n\treturn x3d;\r\n}\r\n\r\n/**\r\n * Reusable X3D Base and Scene Component\r\n *\r\n * @module\r\n */\r\nexport function createScene2(x3d, layers, classed) {\r\n\t// Create Scene\r\n\tlet scene = x3d.selectAll(\"Scene\")\r\n\t\t.data([0])\r\n\t\t.enter()\r\n\t\t.append(\"Scene\");\r\n\r\n\t// Disable gamma correction\r\n\tscene.append(\"Environment\")\r\n\t\t.attr(\"gammaCorrectionDefault\", \"none\");\r\n\r\n\t// Add a white background\r\n\tscene.append(\"Background\")\r\n\t\t.attr(\"groundColor\", \"1 1 1\")\r\n\t\t.attr(\"skyColor\", \"1 1 1\");\r\n\r\n\t// Add layer groups\r\n\tscene.classed(classed, true)\r\n\t\t.selectAll(\"Group\")\r\n\t\t.data(layers)\r\n\t\t.enter()\r\n\t\t.append(\"Group\")\r\n\t\t.attr(\"class\", (d) => d);\r\n\r\n\treturn scene;\r\n}\r\n\r\n/**\r\n * Reusable X3D Base and Scene Component\r\n *\r\n * @module\r\n */\r\nexport function createScene(selection, layers, classed, width, height, debug) {\r\n\tlet x3d = createX3d(selection, width, height, debug);\r\n\tlet x3d2 = selection.select(\"X3D\");\r\n\r\n\tconsole.log(x3d);\r\n\tconsole.log(x3d2);\r\n\r\n\tlet scene = createScene2(x3d, layers, classed);\r\n\tlet scene2 = selection.select(\"Scene\");\r\n\r\n\tconsole.log(scene);\r\n\tconsole.log(scene2);\r\n\r\n\treturn scene2;\r\n}"]},"metadata":{},"sourceType":"module"}