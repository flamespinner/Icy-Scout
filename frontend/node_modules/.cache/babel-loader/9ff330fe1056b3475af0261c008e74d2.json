{"ast":null,"code":"import * as d3 from \"d3\";\n/**\n * Reusable X3D Viewpoint Component\n *\n * @module\n */\n\nexport default function () {\n  /* Default Properties */\n  let centerOfRotation = [0.0, 0.0, 0.0];\n  let viewPosition = [80.0, 15.0, 80.0];\n  let viewOrientation = [0.0, 1.0, 0.0, 0.8];\n  let fieldOfView = 0.8;\n  /**\n   * Constructor\n   *\n   * @constructor\n   * @alias viewpoint\n   * @param {d3.selection} selection - The chart holder D3 selection.\n   */\n\n  const my = function (selection) {\n    selection.each(function () {\n      const viewpoint = d3.select(this).selectAll(\"viewpoint\").data([null]);\n      viewpoint.enter().append(\"Viewpoint\").attr(\"centerOfRotation\", centerOfRotation.join(\" \")).attr(\"position\", viewPosition.join(\" \")).attr(\"orientation\", viewOrientation.join(\" \")).attr(\"fieldOfView\", fieldOfView).attr(\"set_bind\", \"true\").merge(viewpoint);\n    });\n  };\n  /**\n   * Set Quick Viewpoint\n   *\n   * @param {string} view - \"left\", \"side\", \"top\", \"dimetric\"\n   * @returns {my}\n   */\n\n\n  my.quickView = function (view) {\n    switch (view) {\n      case \"left\":\n        centerOfRotation = [0.0, 0.0, 0.0];\n        viewPosition = [37.10119, 18.70484, 51.01594];\n        viewOrientation = [0.06724, 0.99767, -0.01148, 0.33908];\n        fieldOfView = 1.0;\n        break;\n\n      case \"side\":\n        centerOfRotation = [20.0, 0.0, 0.0];\n        viewPosition = [20.00000, 20.00000, 50.00000];\n        viewOrientation = [0.00000, 0.00000, 0.00000, 0.00000];\n        fieldOfView = 1.0;\n        break;\n\n      case \"top\":\n        centerOfRotation = [0.0, 0.0, 0.0];\n        viewPosition = [27.12955, 106.67181, 31.65828];\n        viewOrientation = [-0.86241, 0.37490, 0.34013, 1.60141];\n        fieldOfView = 1.0;\n        break;\n\n      case \"dimetric\":\n      default:\n        centerOfRotation = [0.0, 0.0, 0.0];\n        viewPosition = [80.0, 15.0, 80.0];\n        viewOrientation = [0.0, 1.0, 0.0, 0.8];\n        fieldOfView = 0.8;\n    }\n\n    return my;\n  };\n  /**\n   * Centre of Rotation Getter / Setter\n   *\n   * @param {number[]} _v - Centre of rotation.\n   * @returns {*}\n   */\n\n\n  my.centerOfRotation = function (_v) {\n    if (!arguments.length) return centerOfRotation;\n    centerOfRotation = _v;\n    return my;\n  };\n  /**\n   * View Position Getter / Setter\n   *\n   * @param {number[]} _v - View position.\n   * @returns {*}\n   */\n\n\n  my.viewPosition = function (_v) {\n    if (!arguments.length) return viewPosition;\n    viewPosition = _v;\n    return my;\n  };\n  /**\n   * View Orientation Getter / Setter\n   *\n   * @param {number[]} _v - View orientation.\n   * @returns {*}\n   */\n\n\n  my.viewOrientation = function (_v) {\n    if (!arguments.length) return viewOrientation;\n    viewOrientation = _v;\n    return my;\n  };\n  /**\n   * Field of View Getter / Setter\n   *\n   * @param {number} _v - Field of view.\n   * @returns {*}\n   */\n\n\n  my.fieldOfView = function (_v) {\n    if (!arguments.length) return fieldOfView;\n    fieldOfView = _v;\n    return my;\n  };\n\n  return my;\n}","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/node_modules/d3-x3d/src/component/viewpoint.js"],"names":["d3","centerOfRotation","viewPosition","viewOrientation","fieldOfView","my","selection","each","viewpoint","select","selectAll","data","enter","append","attr","join","merge","quickView","view","_v","arguments","length"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\n\n/**\n * Reusable X3D Viewpoint Component\n *\n * @module\n */\nexport default function() {\n\n\t/* Default Properties */\n\tlet centerOfRotation = [0.0, 0.0, 0.0];\n\tlet viewPosition = [80.0, 15.0, 80.0];\n\tlet viewOrientation = [0.0, 1.0, 0.0, 0.8];\n\tlet fieldOfView = 0.8;\n\n\t/**\n\t * Constructor\n\t *\n\t * @constructor\n\t * @alias viewpoint\n\t * @param {d3.selection} selection - The chart holder D3 selection.\n\t */\n\tconst my = function(selection) {\n\t\tselection.each(function() {\n\t\t\tconst viewpoint = d3.select(this).selectAll(\"viewpoint\")\n\t\t\t\t.data([null]);\n\n\t\t\tviewpoint.enter()\n\t\t\t\t.append(\"Viewpoint\")\n\t\t\t\t.attr(\"centerOfRotation\", centerOfRotation.join(\" \"))\n\t\t\t\t.attr(\"position\", viewPosition.join(\" \"))\n\t\t\t\t.attr(\"orientation\", viewOrientation.join(\" \"))\n\t\t\t\t.attr(\"fieldOfView\", fieldOfView)\n\t\t\t\t.attr(\"set_bind\", \"true\")\n\t\t\t\t.merge(viewpoint);\n\t\t});\n\t};\n\n\t/**\n\t * Set Quick Viewpoint\n\t *\n\t * @param {string} view - \"left\", \"side\", \"top\", \"dimetric\"\n\t * @returns {my}\n\t */\n\tmy.quickView = function(view) {\n\t\tswitch (view) {\n\t\t\tcase \"left\":\n\t\t\t\tcenterOfRotation = [0.0, 0.0, 0.0];\n\t\t\t\tviewPosition = [37.10119, 18.70484, 51.01594];\n\t\t\t\tviewOrientation = [0.06724, 0.99767, -0.01148, 0.33908];\n\t\t\t\tfieldOfView = 1.0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"side\":\n\t\t\t\tcenterOfRotation = [20.0, 0.0, 0.0];\n\t\t\t\tviewPosition = [20.00000, 20.00000, 50.00000];\n\t\t\t\tviewOrientation = [0.00000, 0.00000, 0.00000, 0.00000];\n\t\t\t\tfieldOfView = 1.0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"top\":\n\t\t\t\tcenterOfRotation = [0.0, 0.0, 0.0];\n\t\t\t\tviewPosition = [27.12955, 106.67181, 31.65828];\n\t\t\t\tviewOrientation = [-0.86241, 0.37490, 0.34013, 1.60141];\n\t\t\t\tfieldOfView = 1.0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"dimetric\":\n\t\t\tdefault:\n\t\t\t\tcenterOfRotation = [0.0, 0.0, 0.0];\n\t\t\t\tviewPosition = [80.0, 15.0, 80.0];\n\t\t\t\tviewOrientation = [0.0, 1.0, 0.0, 0.8];\n\t\t\t\tfieldOfView = 0.8;\n\t\t}\n\t\treturn my;\n\t};\n\n\t/**\n\t * Centre of Rotation Getter / Setter\n\t *\n\t * @param {number[]} _v - Centre of rotation.\n\t * @returns {*}\n\t */\n\tmy.centerOfRotation = function(_v) {\n\t\tif (!arguments.length) return centerOfRotation;\n\t\tcenterOfRotation = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * View Position Getter / Setter\n\t *\n\t * @param {number[]} _v - View position.\n\t * @returns {*}\n\t */\n\tmy.viewPosition = function(_v) {\n\t\tif (!arguments.length) return viewPosition;\n\t\tviewPosition = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * View Orientation Getter / Setter\n\t *\n\t * @param {number[]} _v - View orientation.\n\t * @returns {*}\n\t */\n\tmy.viewOrientation = function(_v) {\n\t\tif (!arguments.length) return viewOrientation;\n\t\tviewOrientation = _v;\n\t\treturn my;\n\t};\n\n\t/**\n\t * Field of View Getter / Setter\n\t *\n\t * @param {number} _v - Field of view.\n\t * @returns {*}\n\t */\n\tmy.fieldOfView = function(_v) {\n\t\tif (!arguments.length) return fieldOfView;\n\t\tfieldOfView = _v;\n\t\treturn my;\n\t};\n\n\treturn my;\n}\n"]},"metadata":{},"sourceType":"module"}