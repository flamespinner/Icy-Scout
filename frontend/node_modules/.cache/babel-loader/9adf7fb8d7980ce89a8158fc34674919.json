{"ast":null,"code":"import * as d3 from \"d3\";\n/**\r\n * Reusable 3D Multi Series Bubble Chart Component\r\n *\r\n * @module\r\n */\n\nexport default function () {\n  /* Default Properties */\n  let dimensions = {\n    x: 40,\n    y: 40,\n    z: 40\n  };\n  let colors = [\"green\", \"red\", \"yellow\", \"steelblue\", \"orange\"];\n  let classed = \"d3X3dBubblesMultiSeries\";\n  /* Scales */\n\n  let xScale;\n  let yScale;\n  let zScale;\n  let colorScale;\n  let colorDomain = [];\n  let sizeScale;\n  let sizeRange = [0.5, 3.0];\n  /* Components */\n\n  const bubbles = componentBubbles().mappings({\n    x: 'x',\n    y: 'y',\n    z: 'z',\n    size: 'size',\n    color: 'color'\n  }).colors(d3.schemeRdYlGn[8]).sizeRange([2, 2]);\n  /**\r\n   * Unique Array\r\n   *\r\n   * @param {array} array1\r\n   * @param {array} array2\r\n   * @returns {array}\r\n   */\n\n  const arrayUnique = function (array1, array2) {\n    let array = array1.concat(array2);\n    let a = array.concat();\n\n    for (let i = 0; i < a.length; ++i) {\n      for (let j = i + 1; j < a.length; ++j) {\n        if (a[i] === a[j]) {\n          a.splice(j--, 1);\n        }\n      }\n    }\n\n    return a;\n  };\n  /**\r\n   /**\r\n   * Initialise Data and Scales\r\n   *\r\n   * @private\r\n   * @param {Array} data - Chart data.\r\n   */\n\n\n  const init = function (data) {\n    const {\n      rowKeys,\n      valueExtent,\n      coordinatesExtent\n    } = dataTransform(data).summary();\n    const {\n      x: extentX,\n      y: extentY,\n      z: extentZ\n    } = coordinatesExtent;\n    const {\n      x: dimensionX,\n      y: dimensionY,\n      z: dimensionZ\n    } = dimensions;\n\n    if (typeof xScale === \"undefined\") {\n      xScale = d3.scaleLinear().domain(extentX).range([0, dimensionX]);\n    }\n\n    if (typeof yScale === \"undefined\") {\n      yScale = d3.scaleLinear().domain(extentY).range([0, dimensionY]);\n    }\n\n    if (typeof zScale === \"undefined\") {\n      zScale = d3.scaleLinear().domain(extentZ).range([0, dimensionZ]);\n    }\n\n    if (typeof colorScale === \"undefined\") {\n      colorDomain = arrayUnique(colorDomain, rowKeys);\n      colorScale = d3.scaleOrdinal().domain(colorDomain).range(colors);\n    }\n\n    if (typeof sizeScale === \"undefined\") {\n      sizeScale = d3.scaleLinear().domain(valueExtent).range(sizeRange);\n    }\n  };\n  /**\r\n   * Constructor\r\n   *\r\n   * @constructor\r\n   * @alias bubblesMultiSeries\r\n   * @param {d3.selection} selection - The chart holder D3 selection.\r\n   */\n\n\n  const my = function (selection) {\n    selection.each(function (data) {\n      init(data);\n\n      const bubbleData = function (d) {\n        return d.map(f => {\n          return {\n            key: f.key,\n            values: f.values.map(g => {\n              return {\n                key: g.key,\n                values: [{\n                  key: \"size\",\n                  value: g.value\n                }, {\n                  key: \"color\",\n                  value: g.value\n                }, {\n                  key: \"x\",\n                  value: g.x\n                }, {\n                  key: \"y\",\n                  value: g.y\n                }, {\n                  key: \"z\",\n                  value: g.z\n                }]\n              };\n            })\n          };\n        });\n      };\n\n      const element = d3.select(this).classed(classed, true);\n      bubbles.xScale(xScale).yScale(yScale).zScale(zScale).sizeScale(sizeScale);\n\n      const addBubbles = function (d) {\n        const color = colorScale(d.key);\n        bubbles.color(color);\n        d3.select(this).call(bubbles);\n      };\n\n      const bubbleGroup = element.selectAll(\".bubbleGroup\").data(bubbleData, d => d.key);\n      bubbleGroup.enter().append(\"Group\").classed(\"bubbleGroup\", true).merge(bubbleGroup).transition().each(addBubbles);\n      bubbleGroup.exit().remove();\n    });\n  };\n  /**\r\n   * Dimensions Getter / Setter\r\n   *\r\n   * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\r\n   * @returns {*}\r\n   */\n\n\n  my.dimensions = function (_v) {\n    if (!arguments.length) return dimensions;\n    dimensions = _v;\n    return this;\n  };\n  /**\r\n   * X Scale Getter / Setter\r\n   *\r\n   * @param {d3.scale} _v - D3 Scale.\r\n   * @returns {*}\r\n   */\n\n\n  my.xScale = function (_v) {\n    if (!arguments.length) return xScale;\n    xScale = _v;\n    return my;\n  };\n  /**\r\n   * Y Scale Getter / Setter\r\n   *\r\n   * @param {d3.scale} _v - D3 scale.\r\n   * @returns {*}\r\n   */\n\n\n  my.yScale = function (_v) {\n    if (!arguments.length) return yScale;\n    yScale = _v;\n    return my;\n  };\n  /**\r\n   * Z Scale Getter / Setter\r\n   *\r\n   * @param {d3.scale} _v - D3 Scale.\r\n   * @returns {*}\r\n   */\n\n\n  my.zScale = function (_v) {\n    if (!arguments.length) return zScale;\n    zScale = _v;\n    return my;\n  };\n  /**\r\n   * Color Scale Getter / Setter\r\n   *\r\n   * @param {d3.scale} _v - D3 color scale.\r\n   * @returns {*}\r\n   */\n\n\n  my.colorScale = function (_v) {\n    if (!arguments.length) return colorScale;\n    colorScale = _v;\n    return my;\n  };\n  /**\r\n   * Size Scale Getter / Setter\r\n   *\r\n   * @param {d3.scale} _v - D3 size scale.\r\n   * @returns {*}\r\n   */\n\n\n  my.sizeScale = function (_v) {\n    if (!arguments.length) return sizeScale;\n    sizeScale = _v;\n    return my;\n  };\n  /**\r\n   * Size Range Getter / Setter\r\n   *\r\n   * @param {number[]} _v - Size min and max (e.g. [0.5, 3.0]).\r\n   * @returns {*}\r\n   */\n\n\n  my.sizeRange = function (_v) {\n    if (!arguments.length) return sizeRange;\n    sizeRange = _v;\n    return my;\n  };\n  /**\r\n   * Colors Getter / Setter\r\n   *\r\n   * @param {Array} _v - Array of colours used by color scale.\r\n   * @returns {*}\r\n   */\n\n\n  my.colors = function (_v) {\n    if (!arguments.length) return colors;\n    colors = _v;\n    return my;\n  };\n  /**\r\n   * Dispatch On Getter\r\n   *\r\n   * @returns {*}\r\n   */\n\n\n  my.on = function () {\n    let value = dispatch.on.apply(dispatch, arguments);\n    return value === dispatch ? my : value;\n  };\n\n  return my;\n}","map":{"version":3,"sources":["C:/Users/Michael Wilke/Desktop/Scout/frontend/src/components/graph.js"],"names":["d3","dimensions","x","y","z","colors","classed","xScale","yScale","zScale","colorScale","colorDomain","sizeScale","sizeRange","bubbles","componentBubbles","mappings","size","color","schemeRdYlGn","arrayUnique","array1","array2","array","concat","a","i","length","j","splice","init","data","rowKeys","valueExtent","coordinatesExtent","dataTransform","summary","extentX","extentY","extentZ","dimensionX","dimensionY","dimensionZ","scaleLinear","domain","range","scaleOrdinal","my","selection","each","bubbleData","d","map","f","key","values","g","value","element","select","addBubbles","call","bubbleGroup","selectAll","enter","append","merge","transition","exit","remove","_v","arguments","on","dispatch","apply"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\r\n\r\n/**\r\n * Reusable 3D Multi Series Bubble Chart Component\r\n *\r\n * @module\r\n */\r\nexport default function() {\r\n\r\n\t/* Default Properties */\r\n\tlet dimensions = { x: 40, y: 40, z: 40 };\r\n\tlet colors = [\"green\", \"red\", \"yellow\", \"steelblue\", \"orange\"];\r\n\tlet classed = \"d3X3dBubblesMultiSeries\";\r\n\r\n\t/* Scales */\r\n\tlet xScale;\r\n\tlet yScale;\r\n\tlet zScale;\r\n\tlet colorScale;\r\n\tlet colorDomain = [];\r\n\tlet sizeScale;\r\n\tlet sizeRange = [0.5, 3.0];\r\n\r\n\t/* Components */\r\n\tconst bubbles = componentBubbles()\r\n\t\t.mappings({ x: 'x', y: 'y', z: 'z', size: 'size', color: 'color' })\r\n\t\t.colors(d3.schemeRdYlGn[8])\r\n\t\t.sizeRange([2, 2]);\r\n\r\n\t/**\r\n\t * Unique Array\r\n\t *\r\n\t * @param {array} array1\r\n\t * @param {array} array2\r\n\t * @returns {array}\r\n\t */\r\n\tconst arrayUnique = function(array1, array2) {\r\n\t\tlet array = array1.concat(array2);\r\n\r\n\t\tlet a = array.concat();\r\n\t\tfor (let i = 0; i < a.length; ++i) {\r\n\t\t\tfor (let j = i + 1; j < a.length; ++j) {\r\n\t\t\t\tif (a[i] === a[j]) {\r\n\t\t\t\t\ta.splice(j--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn a;\r\n\t};\r\n\r\n\t/**\r\n\t /**\r\n\t * Initialise Data and Scales\r\n\t *\r\n\t * @private\r\n\t * @param {Array} data - Chart data.\r\n\t */\r\n\tconst init = function(data) {\r\n\t\tconst { rowKeys, valueExtent, coordinatesExtent } = dataTransform(data).summary();\r\n\t\tconst { x: extentX, y: extentY, z: extentZ } = coordinatesExtent;\r\n\t\tconst { x: dimensionX, y: dimensionY, z: dimensionZ } = dimensions;\r\n\r\n\t\tif (typeof xScale === \"undefined\") {\r\n\t\t\txScale = d3.scaleLinear()\r\n\t\t\t\t.domain(extentX)\r\n\t\t\t\t.range([0, dimensionX]);\r\n\t\t}\r\n\r\n\t\tif (typeof yScale === \"undefined\") {\r\n\t\t\tyScale = d3.scaleLinear()\r\n\t\t\t\t.domain(extentY)\r\n\t\t\t\t.range([0, dimensionY]);\r\n\t\t}\r\n\r\n\t\tif (typeof zScale === \"undefined\") {\r\n\t\t\tzScale = d3.scaleLinear()\r\n\t\t\t\t.domain(extentZ)\r\n\t\t\t\t.range([0, dimensionZ]);\r\n\t\t}\r\n\r\n\t\tif (typeof colorScale === \"undefined\") {\r\n\t\t\tcolorDomain = arrayUnique(colorDomain, rowKeys);\r\n\t\t\tcolorScale = d3.scaleOrdinal()\r\n\t\t\t\t.domain(colorDomain)\r\n\t\t\t\t.range(colors);\r\n\t\t}\r\n\r\n\t\tif (typeof sizeScale === \"undefined\") {\r\n\t\t\tsizeScale = d3.scaleLinear()\r\n\t\t\t\t.domain(valueExtent)\r\n\t\t\t\t.range(sizeRange);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t *\r\n\t * @constructor\r\n\t * @alias bubblesMultiSeries\r\n\t * @param {d3.selection} selection - The chart holder D3 selection.\r\n\t */\r\n\tconst my = function(selection) {\r\n\t\tselection.each(function(data) {\r\n\t\t\tinit(data);\r\n\r\n\t\t\tconst bubbleData = function(d) {\r\n\t\t\t\treturn d.map((f) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tkey: f.key,\r\n\t\t\t\t\t\tvalues: f.values.map((g) => {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tkey: g.key,\r\n\t\t\t\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t\t\t\t{ key: \"size\", value: g.value },\r\n\t\t\t\t\t\t\t\t\t{ key: \"color\", value: g.value },\r\n\t\t\t\t\t\t\t\t\t{ key: \"x\", value: g.x },\r\n\t\t\t\t\t\t\t\t\t{ key: \"y\", value: g.y },\r\n\t\t\t\t\t\t\t\t\t{ key: \"z\", value: g.z }\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tconst element = d3.select(this)\r\n\t\t\t\t.classed(classed, true);\r\n\r\n\t\t\tbubbles.xScale(xScale)\r\n\t\t\t\t.yScale(yScale)\r\n\t\t\t\t.zScale(zScale)\r\n\t\t\t\t.sizeScale(sizeScale);\r\n\r\n\t\t\tconst addBubbles = function(d) {\r\n\t\t\t\tconst color = colorScale(d.key);\r\n\t\t\t\tbubbles.color(color);\r\n\t\t\t\td3.select(this).call(bubbles);\r\n\t\t\t};\r\n\r\n\t\t\tconst bubbleGroup = element.selectAll(\".bubbleGroup\")\r\n\t\t\t\t.data(bubbleData, (d) => d.key);\r\n\r\n\t\t\tbubbleGroup.enter()\r\n\t\t\t\t.append(\"Group\")\r\n\t\t\t\t.classed(\"bubbleGroup\", true)\r\n\t\t\t\t.merge(bubbleGroup)\r\n\t\t\t\t.transition()\r\n\t\t\t\t.each(addBubbles);\r\n\r\n\t\t\tbubbleGroup.exit()\r\n\t\t\t\t.remove();\r\n\t\t});\r\n\t};\r\n\r\n\t/**\r\n\t * Dimensions Getter / Setter\r\n\t *\r\n\t * @param {{x: number, y: number, z: number}} _v - 3D object dimensions.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.dimensions = function(_v) {\r\n\t\tif (!arguments.length) return dimensions;\r\n\t\tdimensions = _v;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * X Scale Getter / Setter\r\n\t *\r\n\t * @param {d3.scale} _v - D3 Scale.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.xScale = function(_v) {\r\n\t\tif (!arguments.length) return xScale;\r\n\t\txScale = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Y Scale Getter / Setter\r\n\t *\r\n\t * @param {d3.scale} _v - D3 scale.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.yScale = function(_v) {\r\n\t\tif (!arguments.length) return yScale;\r\n\t\tyScale = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Z Scale Getter / Setter\r\n\t *\r\n\t * @param {d3.scale} _v - D3 Scale.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.zScale = function(_v) {\r\n\t\tif (!arguments.length) return zScale;\r\n\t\tzScale = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Color Scale Getter / Setter\r\n\t *\r\n\t * @param {d3.scale} _v - D3 color scale.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.colorScale = function(_v) {\r\n\t\tif (!arguments.length) return colorScale;\r\n\t\tcolorScale = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Size Scale Getter / Setter\r\n\t *\r\n\t * @param {d3.scale} _v - D3 size scale.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.sizeScale = function(_v) {\r\n\t\tif (!arguments.length) return sizeScale;\r\n\t\tsizeScale = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Size Range Getter / Setter\r\n\t *\r\n\t * @param {number[]} _v - Size min and max (e.g. [0.5, 3.0]).\r\n\t * @returns {*}\r\n\t */\r\n\tmy.sizeRange = function(_v) {\r\n\t\tif (!arguments.length) return sizeRange;\r\n\t\tsizeRange = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Colors Getter / Setter\r\n\t *\r\n\t * @param {Array} _v - Array of colours used by color scale.\r\n\t * @returns {*}\r\n\t */\r\n\tmy.colors = function(_v) {\r\n\t\tif (!arguments.length) return colors;\r\n\t\tcolors = _v;\r\n\t\treturn my;\r\n\t};\r\n\r\n\t/**\r\n\t * Dispatch On Getter\r\n\t *\r\n\t * @returns {*}\r\n\t */\r\n\tmy.on = function() {\r\n\t\tlet value = dispatch.on.apply(dispatch, arguments);\r\n\t\treturn value === dispatch ? my : value;\r\n\t};\r\n\r\n\treturn my;\r\n}"]},"metadata":{},"sourceType":"module"}